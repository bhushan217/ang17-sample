{
  "options":{
    "sports": [
      {"id": 1, "label": "Cricket"},
      {"id": 2, "label": "Hockey" }
    ],
    "teams": [
      {"id":1, "label": "India", "sportId": 1}
    ],
    "players": [
      {"id": 1, "label": "Sachin", "teamId": 1},
      {"id": 2, "label": "Yuvraj", "teamId": 1}
    ]
  },
  "fields":
  [
  { "key": "firstName", "type": "input", "props": { "label": "First Name", "required": true }, "fieldGroupClassName":"display-flex" },
  { "key": "lastName", "type": "input", "props": { "label": "Last Name" } , "className": "flex-1"},
  { "key": "DOB", "type": "datepicker", "props": { "label": "Date of Birth" } },
  {
    "key": "mac",
    "type": "input",
    "props": {
      "label": "Mac Address",
      "pattern": "([0-9A-F]{2}[:-]){5}([0-9A-F]{2})"
    }
  },
  {
    "key": "color",
    "type": "input",
    "props": { "label": "Color Preference (try this out)" }
  },
  {
    "key": "reason",
    "type": "textarea",
    "props": { "label": "Why?" },
    "expressions": {
      "hide": "!model.color",
      "props.label": "'Why did you choose '+ model.color+'?'"
    }
  },
  {
    "key": "sport",
    "type": "select",
    "props": {
      "label": "Sport",
      "optionKey": "sports",
      "options": [
        { "id": 1, "label": "Cricket-Men" },
        { "id": 2, "label": "Hockey" }
      ],
      "valueProp": "id",
      "labelProp": "label"
    }
  },
  {
    "key": "team",
    "type": "select",
    "props": {
      "label": "Team",
      "options": [],
      "valueProp": "id",
      "labelProp": "label"
    },
    "expressions": {
      "props.options": "formState.selectOptionsData?.teams?.filter(team => team.sportId === model.sport)",
      "model.team": "field.props.options?.find(o => o.id === model.team) ? model.team : null"
    }
  },
  {
    "key": "player",
    "type": "select",
    "props": {
      "label": "Player",
      "options": [],
      "valueProp": "id",
      "labelProp": "label"
    },
    "expressions": {
      "props.options": "formState.selectOptionsData?.players?.filter(player => player.teamId === model.team)",
      "model.player": "field.props.options?.find(o => o.id === model.player) ? model.player : null"
    }
  },
  {
    "key": "address",
    "wrappers": ["panel"],
    "props": { "label": "Address", "required": true },
    "fieldGroup": [
      {
        "key": "city",
        "type": "input",
        "props": {
          "required": true,
          "type": "text",
          "label": "City"
        }
      },
      {
        "key": "state",
        "type": "input",
        "props": {
          "required": true,
          "type": "text",
          "label": "State"
        }
      }
    ]
  }
]
}